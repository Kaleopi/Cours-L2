#include <stdio.h>     /* Pour printf */
#include <stdlib.h>    /* Pour exit, EXIT_SUCCESS, EXIT_FAILURE */
#include <unistd.h>    /* Pour fork */
#include <sys/wait.h>  /* Pour wait */
#include <sys/types.h> /* Pour pid_t */
#include <time.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <fcntl.h>

int main(int argc, char * argv[]) {
  pid_t p;
  int status;
  int f;
  int x;
  const char *nom="nom";
  /*initialisation de n servant à délimiter le nombre de processus et la range des ID*/
  int n = atoi(argv[1]), in, out, c;
    /* On initialise le tube et le tableau de donnée*/
  int *tube = (int *) malloc(2 * n * sizeof(int)), *tab = (int *) malloc(2 * n * sizeof(int));
    /*On pipe le tube créer*/
  for (int i = 0; i < n; i++) {
    pipe(&tube[2 * i]);
  }
/*Boucle principale servant à remplir le tube*/
  for (int i = 0; i < n ; i++) {
/*Création de l'ID*/
    srand(time(NULL) * i ^ n);
    c = rand() % n + 1;
    printf(" Processus : %d \t ID : %d\n",i,c);
      /*Remplissage de tab*/
    tab[i * 2] = c;

      if (i == 1) {
        tab[1] = 0;
      } else {
        tab[i] = tab[i - 2] + 1;
      }
      /*Création des processus*/
      if (fork() == 0) {
          waitpid(p,&status,WUNTRACED|WCONTINUED);
          /*Ouverture des tubes adéquates*/
        in = tube[2 * i];
        out = tube[2 * i + 3];
         //printf("%d\n",i);
          /*Tentative d'éléction*/
        if (c<read(tube[2*i-2], &c, sizeof(int))) {
          read(tube[2*i-2], &c, sizeof(int));
          write(out, &c, sizeof(int));

        } else {
          read(in, &c, sizeof(int));
          write(out, &c, sizeof(int));
       }

        exit(0);
        exit(0);
     // }else{
      //  in = tube[2 * i - 2];
      //  out = tube[i];
        //write(out, &c, sizeof(int));
       // read(in, &c, sizeof(int));
      }
       //exit(0);
    }
    printf("%d\n",c);
    /*Ecriture dans le fichier*/
    if(f=open(nom,O_CREAT|O_WRONLY,777)){
      for (int i=0 ;i<n;i++){
          write(f,(void*)&tab[i],sizeof(int));
        }
        printf("\n");
    }
    close(f);


  exit(0);
/*AFFICHAGE*/
  for(int i=0 ; i<n*2 ; i++){
    if(i%2==0){
      read(tube[i], &c, sizeof(int));
      printf("Elu",c);
      printf("Processus %d : ",tab[i]);
     // printf("\thop : %d\n",tab[i+1]);
    }
      if(c=tab[i]){
        printf("ça fonctionne");
      }
  }
  exit(0);
  exit(0);
}
