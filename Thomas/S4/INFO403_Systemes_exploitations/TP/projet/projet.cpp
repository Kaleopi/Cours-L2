#include <stdio.h>     /* Pour printf */
#include <stdlib.h>    /* Pour exit, EXIT_SUCCESS, EXIT_FAILURE */
#include <unistd.h>    /* Pour fork */
#include <sys/wait.h>  /* Pour wait */
#include <sys/types.h> /* Pour pid_t */
#include <time.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <fcntl.h>

int main(int argc, char * argv[]){
  pid_t p;
  int n = atoi(argv[1]), in, out, c;
  int *tube = (int*)malloc(2*n*sizeof(int)), *tab = (int*)malloc(2*n*sizeof(int));

  for(int i=0 ; i<n ; i++){
    pipe(&tube[2*i]);
  }

  for(int i=0 ; i<n ; i++){
    srand(time(NULL)-(i^n));
    c = rand()%n+1;
    tab[i*2]=c;
    if(i%2==1){
      printf("test");
      if(i==1){
        tab[1]=0;
        printf("test");
      }
      else{
        printf("test");
        tab[i] = tab[i-2]+1;
      }
    }}}
//     if(fork()==0){
//       in = tube[2*i];
//       out = tube[2*i+3];
//       // printf("%d\n",i);
//       // printf("%d\n",c);
//       read(in, &c, sizeof(int));
//       write(out, &c, sizeof(int));
//     }
//       exit(0);
//     }
//   }
//
//   for(int i=0 ; i<n*2 ; i++){
//     if(i%2==0){
//       printf("Processus %d : ",tab[i]);
//       printf("\thop : %d\n",tab[i+1]);
//     }
//   }
// }
