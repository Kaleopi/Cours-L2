//
// Soit A et B deux matrices carrées mxn, stockées dans des fichiers.
//	Le but est de réaliser le produit matriciel avec n processus fils :
//	chaque fils calcule une ligne (ou une colonne)
//	et transmet par un tube le résultat au processus père.
//	Celui ci enregristrera la matrice dans un fichier résultat.
//

//
// Écrire un programme
// qui affiche le nom des fichiers dont le contenu contient la chaine "toto"
//

#include <stdio.h>     /* Pour printf */
#include <stdlib.h>    /* Pour exit, EXIT_SUCCESS, EXIT_FAILURE */
#include <unistd.h>    /* Pour fork */
#include <sys/wait.h>  /* Pour wait */
#include <sys/types.h> /* Pour pid_t */
#include <time.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <fcntl.h>

int find(char *fileName,char *strSearch) {

    FILE *f;
    char c;
    int found=0;
    int pos=0;
    int length;

    f = fopen(fileName,"r");
    if( f == NULL )
        return 0;

    length=strlen(strSearch);

    while( fread(&c,1,1,f)>0 && !found ) {

        if( c==strSearch[pos] ) {
            pos++;
        } else {
            if(pos!=0) {
                // On doit rembobiner !
                fseek(f,-pos,SEEK_CUR);
                pos=0;
            }
        }

        found = (pos==length);

    }
    fclose(f);

    return found;

}
int creerMatrice(int m,char* nom){
    int f;
    char temp;
    if(f=open(nom,O_CREAT|O_WRONLY,077)){
        printf("test\n");
            for (int i=0 ;i<m;i++){
                for(int j=0;j<m;j++){
                    temp='k';
                    printf("%c",temp);
                    write(f,(void*)&temp,sizeof(char));
                }
                printf("\n");
            }

}
    close(f);
}
int main(int argc,char *argv[]){
    DIR *p;
    char* str;
    struct stat buf;
    struct dirent *de;
    /*p=opendir("./");
    while((de=readdir(p))!=NULL){
        str=de->d_name;
        if(find(str,(char*)"toto")==1){
            printf("%s \n",de->d_name);
        }

   }*/
    creerMatrice(3,(char*)"toto.txt");
    //closedir(p);
    exit(0);
    return 0;
}